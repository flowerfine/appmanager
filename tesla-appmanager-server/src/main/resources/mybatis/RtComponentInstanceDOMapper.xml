<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.tesla.appmanager.server.repository.mapper.RtComponentInstanceDOMapper">
  <resultMap id="BaseResultMap" type="com.alibaba.tesla.appmanager.server.repository.domain.RtComponentInstanceDO">
    <!--@mbg.generated-->
    <!--@Table am_rt_component_instance-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="component_instance_id" jdbcType="VARCHAR" property="componentInstanceId" />
    <result column="app_instance_id" jdbcType="VARCHAR" property="appInstanceId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="component_type" jdbcType="VARCHAR" property="componentType" />
    <result column="component_name" jdbcType="VARCHAR" property="componentName" />
    <result column="cluster_id" jdbcType="VARCHAR" property="clusterId" />
    <result column="namespace_id" jdbcType="VARCHAR" property="namespaceId" />
    <result column="stage_id" jdbcType="VARCHAR" property="stageId" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="watch_kind" jdbcType="VARCHAR" property="watchKind" />
    <result column="times" jdbcType="BIGINT" property="times" />
    <result column="conditions" jdbcType="LONGVARCHAR" property="conditions" />
    <result column="component_schema" jdbcType="LONGVARCHAR" property="componentSchema" />
    <result column="lock_version" jdbcType="INTEGER" property="lockVersion" />
    <result column="deploy_app_id" jdbcType="BIGINT" property="deployAppId" />
    <result column="deploy_component_id" jdbcType="BIGINT" property="deployComponentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Single_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
        AND lock_version = #{record.lockVersion,jdbcType=INTEGER}
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, gmt_create, gmt_modified, component_instance_id, app_instance_id, app_id, component_type, 
    component_name, cluster_id, namespace_id, stage_id, version, `status`, watch_kind, 
    times, conditions, component_schema, lock_version, deploy_app_id, deploy_component_id
  </sql>
  <sql id="Join_Column_List">
    A.id, A.gmt_create, A.gmt_modified, A.component_instance_id, A.app_instance_id, A.app_id, A.component_type,
    A.component_name, A.cluster_id, A.namespace_id, A.stage_id, A.version, A.`status`, A.watch_kind,
    A.times, A.conditions, A.component_schema, A.lock_version, A.deploy_app_id, A.deploy_component_id
  </sql>
  <select id="selectByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.RtComponentInstanceDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_rt_component_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by id desc
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from am_rt_component_instance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from am_rt_component_instance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.RtComponentInstanceDOExample">
    <!--@mbg.generated-->
    delete from am_rt_component_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.RtComponentInstanceDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into am_rt_component_instance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="componentInstanceId != null">
        component_instance_id,
      </if>
      <if test="appInstanceId != null">
        app_instance_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="componentType != null">
        component_type,
      </if>
      <if test="componentName != null">
        component_name,
      </if>
      <if test="clusterId != null">
        cluster_id,
      </if>
      <if test="namespaceId != null">
        namespace_id,
      </if>
      <if test="stageId != null">
        stage_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="watchKind != null">
        watch_kind,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="conditions != null">
        conditions,
      </if>
      <if test="componentSchema != null">
        component_schema,
      </if>
      <if test="lockVersion != null">
        lock_version,
      </if>
      <if test="deployAppId != null">
        deploy_app_id,
      </if>
      <if test="deployComponentId != null">
        deploy_component_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="componentInstanceId != null">
        #{componentInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="appInstanceId != null">
        #{appInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="componentType != null">
        #{componentType,jdbcType=VARCHAR},
      </if>
      <if test="componentName != null">
        #{componentName,jdbcType=VARCHAR},
      </if>
      <if test="clusterId != null">
        #{clusterId,jdbcType=VARCHAR},
      </if>
      <if test="namespaceId != null">
        #{namespaceId,jdbcType=VARCHAR},
      </if>
      <if test="stageId != null">
        #{stageId,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="watchKind != null">
        #{watchKind,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=BIGINT},
      </if>
      <if test="conditions != null">
        #{conditions,jdbcType=LONGVARCHAR},
      </if>
      <if test="componentSchema != null">
        #{componentSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="lockVersion != null">
        #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="deployAppId != null">
        #{deployAppId,jdbcType=BIGINT},
      </if>
      <if test="deployComponentId != null">
        #{deployComponentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.RtComponentInstanceDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from am_rt_component_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update am_rt_component_instance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.componentInstanceId != null">
        component_instance_id = #{record.componentInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.appInstanceId != null">
        app_instance_id = #{record.appInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.componentType != null">
        component_type = #{record.componentType,jdbcType=VARCHAR},
      </if>
      <if test="record.componentName != null">
        component_name = #{record.componentName,jdbcType=VARCHAR},
      </if>
      <if test="record.clusterId != null">
        cluster_id = #{record.clusterId,jdbcType=VARCHAR},
      </if>
      <if test="record.namespaceId != null">
        namespace_id = #{record.namespaceId,jdbcType=VARCHAR},
      </if>
      <if test="record.stageId != null">
        stage_id = #{record.stageId,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.watchKind != null">
        watch_kind = #{record.watchKind,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=BIGINT},
      </if>
      <if test="record.conditions != null">
        conditions = #{record.conditions,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.componentSchema != null">
        component_schema = #{record.componentSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.deployAppId != null">
        deploy_app_id = #{record.deployAppId,jdbcType=BIGINT},
      </if>
      <if test="record.deployComponentId != null">
        deploy_component_id = #{record.deployComponentId,jdbcType=BIGINT},
      </if>
      lock_version = lock_version + 1,
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleAndOption" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Join_Column_List"/>
    from am_rt_component_instance A
    inner join am_app_option B
    on A.app_id = B.app_id and B.key = #{key} and B.value = #{value}
    <if test="_parameter != null">
      <include refid="Single_Example_Where_Clause"/>
    </if>
    order by id desc
  </select>
</mapper>