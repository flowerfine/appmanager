<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.tesla.appmanager.server.repository.mapper.DeployAppDOMapper">
    <resultMap id="BaseResultMap" type="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDO">
        <!--@mbg.generated-->
        <!--@Table am_deploy_app-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="app_package_id" jdbcType="BIGINT" property="appPackageId"/>
        <result column="app_id" jdbcType="VARCHAR" property="appId"/>
        <result column="gmt_start" jdbcType="TIMESTAMP" property="gmtStart"/>
        <result column="gmt_end" jdbcType="TIMESTAMP" property="gmtEnd"/>
        <result column="deploy_status" jdbcType="VARCHAR" property="deployStatus"/>
        <result column="deploy_error_message" jdbcType="LONGVARCHAR" property="deployErrorMessage"/>
        <result column="deploy_creator" jdbcType="VARCHAR" property="deployCreator"/>
        <result column="deploy_process_id" jdbcType="BIGINT" property="deployProcessId"/>
        <result column="package_version" jdbcType="VARCHAR" property="packageVersion"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="cluster_id" jdbcType="VARCHAR" property="clusterId"/>
        <result column="namespace_id" jdbcType="VARCHAR" property="namespaceId"/>
        <result column="stage_id" jdbcType="VARCHAR" property="stageId"/>
        <result column="config_sha256" jdbcType="VARCHAR" property="configSha256"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Single_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
                AND version = #{version,jdbcType=INTEGER}
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, gmt_create, gmt_modified, app_package_id, app_id, gmt_start, gmt_end, deploy_status,
        deploy_error_message, deploy_creator, deploy_process_id, package_version, version,
        cluster_id, namespace_id, stage_id, config_sha256
    </sql>
    <sql id="Join_Column_List">
        A.id,
        A.gmt_create,
        A.gmt_modified,
        A.app_package_id,
        A.app_id,
        A.gmt_start,
        A.gmt_end,
        A.deploy_status,
        A.deploy_error_message,
        A.deploy_creator,
        A.deploy_process_id,
        A.package_version,
        A.version,
        A.cluster_id,
        A.namespace_id,
        A.stage_id,
        A.config_sha256
    </sql>
    <select id="selectByExample"
            parameterType="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDOExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from am_deploy_app
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        order by id desc
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from am_deploy_app
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from am_deploy_app
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample"
            parameterType="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDOExample">
        <!--@mbg.generated-->
        delete
        from am_deploy_app
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into am_deploy_app
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="appPackageId != null">
                app_package_id,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="gmtStart != null">
                gmt_start,
            </if>
            <if test="gmtEnd != null">
                gmt_end,
            </if>
            <if test="deployStatus != null">
                deploy_status,
            </if>
            <if test="deployErrorMessage != null">
                deploy_error_message,
            </if>
            <if test="deployCreator != null">
                deploy_creator,
            </if>
            <if test="deployProcessId != null">
                deploy_process_id,
            </if>
            <if test="packageVersion != null">
                package_version,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="clusterId != null">
                cluster_id,
            </if>
            <if test="namespaceId != null">
                namespace_id,
            </if>
            <if test="stageId != null">
                stage_id,
            </if>
            <if test="configSha256 != null">
                config_sha256,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="appPackageId != null">
                #{appPackageId,jdbcType=BIGINT},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="gmtStart != null">
                #{gmtStart,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtEnd != null">
                #{gmtEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="deployStatus != null">
                #{deployStatus,jdbcType=VARCHAR},
            </if>
            <if test="deployErrorMessage != null">
                #{deployErrorMessage,jdbcType=LONGVARCHAR},
            </if>
            <if test="deployCreator != null">
                #{deployCreator,jdbcType=VARCHAR},
            </if>
            <if test="deployProcessId != null">
                #{deployProcessId,jdbcType=BIGINT},
            </if>
            <if test="packageVersion != null">
                #{packageVersion,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="clusterId != null">
                #{clusterId,jdbcType=VARCHAR},
            </if>
            <if test="namespaceId != null">
                #{namespaceId,jdbcType=VARCHAR},
            </if>
            <if test="stageId != null">
                #{stageId,jdbcType=VARCHAR},
            </if>
            <if test="configSha256 != null">
                #{configSha256,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDOExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*)
        from am_deploy_app
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update am_deploy_app
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.appPackageId != null">
                app_package_id = #{record.appPackageId,jdbcType=BIGINT},
            </if>
            <if test="record.appId != null">
                app_id = #{record.appId,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtStart != null">
                gmt_start = #{record.gmtStart,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtEnd != null">
                gmt_end = #{record.gmtEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deployStatus != null">
                deploy_status = #{record.deployStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.deployErrorMessage != null">
                deploy_error_message = #{record.deployErrorMessage,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.deployCreator != null">
                deploy_creator = #{record.deployCreator,jdbcType=VARCHAR},
            </if>
            <if test="record.deployProcessId != null">
                deploy_process_id = #{record.deployProcessId,jdbcType=BIGINT},
            </if>
            <if test="record.packageVersion != null">
                package_version = #{record.packageVersion,jdbcType=VARCHAR},
            </if>
            <if test="record.clusterId != null">
                cluster_id = #{record.clusterId,jdbcType=VARCHAR},
            </if>
            <if test="record.namespaceId != null">
                namespace_id = #{record.namespaceId,jdbcType=VARCHAR},
            </if>
            <if test="record.stageId != null">
                stage_id = #{record.stageId,jdbcType=VARCHAR},
            </if>
            <if test="record.configSha256 != null">
                config_sha256 = #{record.configSha256,jdbcType=VARCHAR},
            </if>
            version = version + 1,
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.alibaba.tesla.appmanager.server.repository.domain.DeployAppDO">
        update am_deploy_app
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="appPackageId != null">
                app_package_id = #{appPackageId,jdbcType=BIGINT},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="gmtStart != null">
                gmt_start = #{gmtStart,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtEnd != null">
                gmt_end = #{gmtEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="deployStatus != null">
                deploy_status = #{deployStatus,jdbcType=VARCHAR},
            </if>
            <if test="deployErrorMessage != null">
                deploy_error_message = #{deployErrorMessage,jdbcType=LONGVARCHAR},
            </if>
            <if test="deployCreator != null">
                deploy_creator = #{deployCreator,jdbcType=VARCHAR},
            </if>
            <if test="deployProcessId != null">
                deploy_process_id = #{deployProcessId,jdbcType=BIGINT},
            </if>
            <if test="packageVersion != null">
                package_version = #{packageVersion,jdbcType=VARCHAR},
            </if>
            <if test="clusterId != null">
                cluster_id = #{clusterId,jdbcType=VARCHAR},
            </if>
            <if test="namespaceId != null">
                namespace_id = #{namespaceId,jdbcType=VARCHAR},
            </if>
            <if test="stageId != null">
                stage_id = #{stageId,jdbcType=VARCHAR},
            </if>
            <if test="configSha256 != null">
                config_sha256 = #{configSha256,jdbcType=VARCHAR},
            </if>
            version = version + 1,
        </set>
        where id = #{id,jdbcType=BIGINT}
          AND version = #{version,jdbcType=INTEGER}
    </update>

    <select id="selectByExampleAndOption" resultMap="BaseResultMap">
        select
        <if test="example.distinct">
            distinct
        </if>
        <include refid="Join_Column_List"/>
        from am_deploy_app A
                     inner join am_app_option B
                on A.app_id = B.app_id and B.key = #{key} and B.value = #{value}
        <if test="_parameter != null">
            <include refid="Single_Example_Where_Clause"/>
        </if>
        order by id desc
    </select>
</mapper>