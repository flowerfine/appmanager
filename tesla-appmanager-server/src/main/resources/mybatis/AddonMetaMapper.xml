<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.tesla.appmanager.server.repository.mapper.AddonMetaMapper">
  <resultMap id="BaseResultMap" type="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDO">
    <!--@mbg.generated-->
    <!--@Table `am_addon_meta`-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="addon_type" jdbcType="VARCHAR" property="addonType" />
    <result column="addon_id" jdbcType="VARCHAR" property="addonId" />
    <result column="addon_version" jdbcType="VARCHAR" property="addonVersion" />
    <result column="addon_label" jdbcType="VARCHAR" property="addonLabel" />
    <result column="addon_description" jdbcType="LONGVARCHAR" property="addonDescription" />
    <result column="addon_schema" jdbcType="LONGVARCHAR" property="addonSchema" />
    <result column="addon_config_schema" jdbcType="LONGVARCHAR" property="addonConfigSchema" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `id`, `gmt_create`, `gmt_modified`, `addon_type`, `addon_id`, `addon_version`, `addon_label`, 
    `addon_description`, `addon_schema`, `addon_config_schema`
  </sql>
  <select id="selectByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `am_addon_meta`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by id desc
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `am_addon_meta`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from `am_addon_meta`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDOExample">
    <!--@mbg.generated-->
    delete from `am_addon_meta`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `am_addon_meta` (`gmt_create`, `gmt_modified`, `addon_type`, 
      `addon_id`, `addon_version`, `addon_label`, 
      `addon_description`, `addon_schema`, 
      `addon_config_schema`)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{addonType,jdbcType=VARCHAR}, 
      #{addonId,jdbcType=VARCHAR}, #{addonVersion,jdbcType=VARCHAR}, #{addonLabel,jdbcType=VARCHAR}, 
      #{addonDescription,jdbcType=LONGVARCHAR}, #{addonSchema,jdbcType=LONGVARCHAR}, 
      #{addonConfigSchema,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `am_addon_meta`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        `gmt_create`,
      </if>
      <if test="gmtModified != null">
        `gmt_modified`,
      </if>
      <if test="addonType != null and addonType != ''">
        `addon_type`,
      </if>
      <if test="addonId != null and addonId != ''">
        `addon_id`,
      </if>
      <if test="addonVersion != null and addonVersion != ''">
        `addon_version`,
      </if>
      <if test="addonLabel != null and addonLabel != ''">
        `addon_label`,
      </if>
      <if test="addonDescription != null and addonDescription != ''">
        `addon_description`,
      </if>
      <if test="addonSchema != null and addonSchema != ''">
        `addon_schema`,
      </if>
      <if test="addonConfigSchema != null and addonConfigSchema != ''">
        `addon_config_schema`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="addonType != null and addonType != ''">
        #{addonType,jdbcType=VARCHAR},
      </if>
      <if test="addonId != null and addonId != ''">
        #{addonId,jdbcType=VARCHAR},
      </if>
      <if test="addonVersion != null and addonVersion != ''">
        #{addonVersion,jdbcType=VARCHAR},
      </if>
      <if test="addonLabel != null and addonLabel != ''">
        #{addonLabel,jdbcType=VARCHAR},
      </if>
      <if test="addonDescription != null and addonDescription != ''">
        #{addonDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="addonSchema != null and addonSchema != ''">
        #{addonSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="addonConfigSchema != null and addonConfigSchema != ''">
        #{addonConfigSchema,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from `am_addon_meta`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update `am_addon_meta`
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        `gmt_modified` = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addonType != null">
        `addon_type` = #{record.addonType,jdbcType=VARCHAR},
      </if>
      <if test="record.addonId != null">
        `addon_id` = #{record.addonId,jdbcType=VARCHAR},
      </if>
      <if test="record.addonVersion != null">
        `addon_version` = #{record.addonVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.addonLabel != null">
        `addon_label` = #{record.addonLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.addonDescription != null">
        `addon_description` = #{record.addonDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.addonSchema != null">
        `addon_schema` = #{record.addonSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.addonConfigSchema != null">
        `addon_config_schema` = #{record.addonConfigSchema,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update `am_addon_meta`
    set `id` = #{record.id,jdbcType=BIGINT},
      `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
      `gmt_modified` = #{record.gmtModified,jdbcType=TIMESTAMP},
      `addon_type` = #{record.addonType,jdbcType=VARCHAR},
      `addon_id` = #{record.addonId,jdbcType=VARCHAR},
      `addon_version` = #{record.addonVersion,jdbcType=VARCHAR},
      `addon_label` = #{record.addonLabel,jdbcType=VARCHAR},
      `addon_description` = #{record.addonDescription,jdbcType=LONGVARCHAR},
      `addon_schema` = #{record.addonSchema,jdbcType=LONGVARCHAR},
      `addon_config_schema` = #{record.addonConfigSchema,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDO">
    <!--@mbg.generated-->
    update `am_addon_meta`
    <set>
      <if test="gmtCreate != null">
        `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        `gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="addonType != null and addonType != ''">
        `addon_type` = #{addonType,jdbcType=VARCHAR},
      </if>
      <if test="addonId != null and addonId != ''">
        `addon_id` = #{addonId,jdbcType=VARCHAR},
      </if>
      <if test="addonVersion != null and addonVersion != ''">
        `addon_version` = #{addonVersion,jdbcType=VARCHAR},
      </if>
      <if test="addonLabel != null and addonLabel != ''">
        `addon_label` = #{addonLabel,jdbcType=VARCHAR},
      </if>
      <if test="addonDescription != null and addonDescription != ''">
        `addon_description` = #{addonDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="addonSchema != null and addonSchema != ''">
        `addon_schema` = #{addonSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="addonConfigSchema != null and addonConfigSchema != ''">
        `addon_config_schema` = #{addonConfigSchema,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alibaba.tesla.appmanager.server.repository.domain.AddonMetaDO">
    <!--@mbg.generated-->
    update `am_addon_meta`
    set `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      `gmt_modified` = #{gmtModified,jdbcType=TIMESTAMP},
      `addon_type` = #{addonType,jdbcType=VARCHAR},
      `addon_id` = #{addonId,jdbcType=VARCHAR},
      `addon_version` = #{addonVersion,jdbcType=VARCHAR},
      `addon_label` = #{addonLabel,jdbcType=VARCHAR},
      `addon_description` = #{addonDescription,jdbcType=LONGVARCHAR},
      `addon_schema` = #{addonSchema,jdbcType=LONGVARCHAR},
      `addon_config_schema` = #{addonConfigSchema,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>